/*
 * traffic_light.c
 *
 *  Created on: Sep 28, 2023
 *      Author: Windows
 */

#include "traffic_ligh.h"

const int red_counter = 5;
const int green_counter = 3;
const int yellow_counter = 2;

int counter_h = red_counter;
int counter_v = green_counter;
int light_hmode = 0;
int light_vmode = 0;
void traffic_light_horizontal(){
	switch (light_hmode){
	case 0:
		light_mode = 1;
		setTimer1(red_counter*10);
		break;
	case 1:
		HAL_GPIO_WritePin(PA1_GPIO_Port, PA1_Pin, RESET);
		HAL_GPIO_WritePin(PA2_GPIO_Port, PA2_Pin, SET);
		HAL_GPIO_WritePin(PA3_GPIO_Port, PA3_Pin, SET);
		updateClockBuffer_horizontal(counter_h);
		if(timer1_flag == 1){
			light_mode = 2;
			counter_h = green_counter;
			setTimer1(green_counter*10);
		}
		break;
	case 2:
		//horizontal
		HAL_GPIO_WritePin(PA1_GPIO_Port, PA1_Pin, SET);
		HAL_GPIO_WritePin(PA2_GPIO_Port, PA2_Pin, SET);
		HAL_GPIO_WritePin(PA3_GPIO_Port, PA3_Pin, RESET);
		updateClockBuffer_horizontal(counter_h);
		if(timer1_flag == 1){
			light_mode = 3;
			counter_h = yellow_counter;
			setTimer1(yellow_counter*10);
		}
		break;
	case 3:
		//horizontal
		HAL_GPIO_WritePin(PA1_GPIO_Port, PA1_Pin, SET);
		HAL_GPIO_WritePin(PA2_GPIO_Port, PA2_Pin, RESET);
		HAL_GPIO_WritePin(PA3_GPIO_Port, PA3_Pin, SET);
		updateClockBuffer_horizontal(counter_h);
		if(timer1_flag == 1){
			light_mode = 1;
			counter_h = red_counter;
			setTimer1(red_counter*10);
		}
		break;
	}
	counter_h--;

}
void traffic_light_vertical(){
	switch (light_vmode){
	case 0:
		break;
	case 1:
		//vertical
		HAL_GPIO_WritePin(PA4_GPIO_Port, PA4_Pin, SET);
		HAL_GPIO_WritePin(PA5_GPIO_Port, PA5_Pin, SET);
		HAL_GPIO_WritePin(PA6_GPIO_Port, PA6_Pin, RESET);
		updateClockBuffer_vertical(counter_v);
		if(timer2_flag == 1){
			light_mode = 3;
			counter_h = yellow_counter;
			setTimer1(yellow_counter*10);
		}
		break;
		case 3:
		//vertical
		HAL_GPIO_WritePin(PA4_GPIO_Port, PA4_Pin, SET);
		HAL_GPIO_WritePin(PA5_GPIO_Port, PA5_Pin, RESET);
		HAL_GPIO_WritePin(PA6_GPIO_Port, PA6_Pin, SET);
		updateClockBuffer_vertical(counter_v);
		if(counter_v <= 0){
			counter_v = red_counter;
			light_vmode = 2;
		}
		else{
			setTimer2(100);
		}
		break;
		case 3:
		//vertical
		HAL_GPIO_WritePin(PA4_GPIO_Port, PA4_Pin, RESET);
		HAL_GPIO_WritePin(PA5_GPIO_Port, PA5_Pin, SET);
		HAL_GPIO_WritePin(PA6_GPIO_Port, PA6_Pin, SET);
		updateClockBuffer_vertical(counter_v);
		if(counter_v <= 0 ){
			counter_v = green_counter;
			light_vmode = 0;
		}
		else{
			setTimer2(100);
		}
		break;
	}
	counter_v--;
}
}

void led_blinked(int blinked_mode){
	HAL_GPIO_WritePin(GPIOA, PA1_Pin |PA4_Pin | PA2_Pin| PA5_Pin|PA3_Pin | PA6_Pin , SET);
	switch (blinked_mode){
	case 1:
		HAL_GPIO_TogglePin(GPIOA, PA1_Pin);
		HAL_GPIO_TogglePin(GPIOA, PA4_Pin);
		setTimer4(20);
		break;
	case 2:
		HAL_GPIO_TogglePin(GPIOA, PA2_Pin);
		HAL_GPIO_TogglePin(GPIOA, PA5_Pin);
		setTimer4(20);
		break;
	case 3:
		HAL_GPIO_TogglePin(GPIOA, PA3_Pin);
		HAL_GPIO_TogglePin(GPIOA, PA6_Pin);
		setTimer4(20);
		break;
	}
}


